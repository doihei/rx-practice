name: rx-practice
packages: # SwiftPMで扱うPackageを最初に定義
  Reusable:
    url: https://github.com/AliSoftware/Reusable
    exactVersion: 4.1.1 # バージョン指定 versionでもOK
  RxSwift:
    url: https://github.com/ReactiveX/RxSwift
    minorVersion: 5.1.1 #指定マイナーバージョン ex: 5.1系ならどれでもOK
  Action:
    url: https://github.com/RxSwiftCommunity/Action
    branch: master # ブランチ指定
  RxSwiftExt:
    url: https://github.com/RxSwiftCommunity/RxSwiftExt
    minVersion: 5.1.0 # 指定バージョン以上かつ
    maxVersion: 5.2.0 # 指定バージョンより小さい
  APIKit:
    url: https://github.com/ishkawa/APIKit
    revision: b95a941 # コミット指定
  Rswift:
    url: https://github.com/mac-cain13/R.swift.Library
    majorVersion: 5.2.0 #指定メジャーバージョン fromでもOK ex: 5系ならどれでもOK
  SwiftyUserDefaults:
    url: https://github.com/sunshinejr/SwiftyUserDefaults
    from: 5.0.0 # majorVersionと同義
  Unio:
    url: https://github.com/cats-oss/Unio
    from: 0.10.0
  Nuke:
    url: https://github.com/kean/Nuke
    from: 9.2.0
  PKHUD:
    url: https://github.com/pkluz/PKHUD
    from: 5.4.0
configs:
  Debug: debug
  Release: release
configFiles:
  Debug: configs/Debug.xcconfig
  Release: configs/Release.xcconfig
options:
  developmentLanguage: ja
settingGroups:
  rxPractice:
    CODE_SIGN_STYLE: Manual
    SWIFT_VERSION: 5.3
    TARGETED_DEVICE_FAMILY: "1"
    OTHER_LINKER_FLAGS: $(inherited) -ObjC
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
    MARKETING_VERSION: 1.0.0
    CURRENT_PROJECT_VERSION: 1
    PRODUCT_BUNDLE_IDENTIFIER: rx-practice.${CONFIGURATION}
    ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
  rxPracticeSettings:
    CODE_SIGN_STYLE: Automatic
    LD_RUNPATH_SEARCH_PATHS: ${inherited} @executable_path/Frameworks @loader_path/Frameworks
    PRODUCT_BUNDLE_IDENTIFIER: rx-practice.${PRODUCT_NAME}
targets:
  rx-practice:
    type: application
    platform: iOS
    scheme: {}
    deploymentTarget: "13.0"
    sources:
      - rx-practice
      - path: "rx-practice/Resources/R.generated.swift"
        optional: true
        type: file
    settings:
      groups: [rxPracticeSettings]
    dependencies:
      - target: Datasource # Embedded Framework
      - package: Action
      - package: Nuke
      - package: Reusable
      - package: Rswift
      - package: RxSwift
        product: RxCocoa # RxSwift内部のRxCocoaを指定する
      - package: RxSwift
        product: RxRelay
      - package: RxSwift # RxSwift内部のRxRelayを指定する
      - package: RxSwiftExt
      - package: PKHUD
      - package: Unio
    preBuildScripts:
      - script: |
                if mint list | grep -q 'R.swift'; then
                    mint run R.swift rswift generate "$SRCROOT/rx-practice/Resources/R.generated.swift"
                else
                    echo "error: R.swift not installed; run 'mint bootstrap' to install"
                    return -1
                fi
        name: Generate resources with R.swift
        inputFiles:
          - $TEMP_DIR/rswift-lastrun
        outputFiles:
          - ${PRODUCT_NAME}/Resources/R.generated.swift
      - script: |
                if mint list | grep -q 'LicensePlist'; then
                    mint run mono0926/LicensePlist license-plist --output-path ${PRODUCT_NAME}/Resources/Settings.bundle
                else
                    echo "error: LicensePlist not installed. run 'mint bootstrap' to install"
                    return -1
                fi
        name: Run license-plist
    postBuildScripts:
      - script: mint run SwiftLint swiftlint
        name: Run SwiftLint
  Datasource:
    type: framework
    platform: iOS
    scheme: {}
    deploymentTarget: "13.0"
    sources:
      - Datasource
    settings:
      groups: [rxPracticeSettings]
    dependencies:
      - package: APIKit
      - package: SwiftyUserDefaults