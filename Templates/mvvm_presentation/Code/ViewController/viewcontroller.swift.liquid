//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Reusable
import RxCocoa
import RxSwift
import UIKit

final class {{ module_info.name }}ViewController: UIViewController, StoryboardBased, ShowLoadingView {

    lazy var viewModel: {{ module_info.name }}ViewModelType = undefined()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        bindInput()
        bindOutput()
    }
}

// MARK: - bind input
extension {{ module_info.name }}ViewController {

    private func bindInput() {
        /*
         *  EXAMPLE:
         *
         *  let input = viewModel.input
         *
         *  button.rx.tap
         *      .bind(to: input.accept(for: \.buttonTap))
         *      .disposed(by: disposeBag)
         */
    }
}

// MARK: - bind output
extension {{ module_info.name }}ViewController {
    
    private func bindOutput() {

        viewModel.output.networkState
            .bind(to: rx.networkState)
            .disposed(by: disposeBag)

        /*
         *  EXAMPLE:
         *
         *  let output = viewModel.output
         *
         *  output.observable(for: \.isEnabled)
         *      .bind(to: button.rx.isEnabled)
         *      .disposed(by: disposeBag)
         *
         *  print("rawValue of isEnabled = \(output.value(for: \.isEnabled))")
         */
    }
}
